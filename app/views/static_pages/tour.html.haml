= content_for :title do
  Tour · Rumi · Pykih

%body.tour{"data-spy" => "scroll", "data-target" => "#myScrollspy"}
  .container
    .row
      .col-xs-10
        %h1.thin.top-heading Tour
        %hr
        %p#top
          Pykih started off as a data design agency. 
          %u It became apparent to us that our visualizations are only as good as the data behind them. 
          There was a need for a robust, enterprise-calibre system that would power the data behind our visualizations. It needed to be simple enough for our customers to use (do-it-yourself tools) and help our team (developer tools) build custom dashboards / visualizations faster, cheaper and better.
        %br
        %br
        %h2.orange Do-it-yourself tools
        %br
        %h2#data-sets Data Sets
        %hr
        %p At the heart of Rumi is a Spreadsheet Grid. Users can upload any type of two-dimensional grid like data set. You can either create an empty spreadsheet or upload a CSV (comma separated values), TSV (tab separated values), PSV (pipe separated values) or SSV (semicolon separated values) files.
        %br
        %table
          %tr
            %td= image_tag "csv.png"
            %td &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
            %td= image_tag "postgres.png"
        %br
        %br
        %h3#clean-data Clean Data
        %hr
        %p
          Often data collected from open data initiatives and scrapped from the web is not standardized and clean. This hampers any sort of analysis or visualization. One of the best tools out there for data cleaning is 
          = link_to "Open Refine.", "http://openrefine.org/", target: "_blank"
          But Open Refine in it's current avatar is a downloadable desktop application. We believe it is critical to integrate data cleaning right into the workflow. Out of the box, Rumi provides many of the cleaning functionalities e.g. like Facets, Distributions, Filter by data types, etc. 
        %br
        %br
        %h3#visualize-data Visualize Data
        %hr
        %p How does one quickly plot data into standard charts, graphs and maps without committing standard visualization mistakes?
        %br
        %p Pykih runs a developer-to-developer product #{link_to "https://chartstore.io", "https://chartstore.io/overview", target: "_blank"}, where we sell responsive, beautifully designed, themed Javascript Charts. 
        %br
        %p Drag-drop to conveniently and quickly create beautiful visualizations from a selection of 26+ charts and 109+ maps with 50+ features within minutes. Most importantly, when you update your data set, the change propagates to your visualizations too within minutes. Each of these charts have been carefully designed. Additionally, each month we will add at least 2 new charts that you can use. Finally, you can "customize / personalize" almost every aspect of the chart. This includes color, typography, labels, axis, etc.
        %br
        %br
        %h3#themes Themes
        %hr
        %p Out of the box, Rumi comes with 11 themes. With just a click, you can theme your charts. Alternatively, we allow users to create custom themes for your organization account so your charts blend well into the look and feel of your chart.
        %br
        %p= image_tag "themes.png", class: "theme-image col-sm-12"
        %h3#publish-visualizations Publish Visualizations
        %hr
        %p To embed your visualisation inside of your blog or website or CMS, simply press the publish button. On pressing the publish button, the data related to the visualisation and the visualisation are published and you are provided with HTML code that you can use within your CMS.
        %br
        %p If you need to publish the visualisation in print or newspaper or magazine, then you can export the visualisation in SVG format. Your team can then import it into photoshop and print it. SVG is a vector file format so you can print it any resolution you want.
        %br
        %br
        %h3#open-data Ecosystem for Open Data
        %hr
        %p Open data portals today are like Yahoo’s directory listing (pre-Google era). One needs to visit multiple sources, download, analyse and often search again. If data is in PDFs, then it needs to manually converted. 
        %br
        %p Charities, Government and Open Data Enthusiasts can create public projects and publish data sets in it. Any one on the Internet can search for these datasets and "clone" them into their accounts.
        %br
        %p We are also creating a library of unmodified data from authentic open data portals (e.g. data.gov.in, RBI.org.in, mospi.nic.in, planningcommission.nic.in, unicef.org/statistics, indiabudget.nic.in, ncrb.nic.in, mha.nic.in and dise.in.). You can simply search one site instead of searching on the Internet. 
        %br
        %br
        %br
        %h2#developer-tools.orange Developer tools
        %hr
        %p Pykih is a services company. We love to custom design visualizations for our customers. Prior to Rumi, our projects were 3 FLOORS TALL since we spent up to 60% of the budget on non-core things e.g. back-ends, caching, hosting, querying data, etc. Rumi empowers us to reliably deliver projects that are 9 FLOORs TALL. Furthermore, Rumi was designed to increase the life-time value of the visualization by making it configurable.
        %br
        %h3#data-as-a-service Data-as-a-service
        %hr
        %p Dashboards and visualizations are built on data. With Rumi, you can create a dataset and export them to the dashboards via APIs. Customers can log into Rumi, update their own data, press the PUBLISH button and three minutes later the visualization updates automatically. From a development stand-point, developers do not need to create tables, seed rows, build back-ends, cache reference tables, etc. Rumi handles all of this for you.
        %br
        %br
        %h3#query-data SQL-as-a-service
        %hr
        %p Data-as-a-service will allow developers to build static dashboards. But what about "interactive" visualizations? One needs the ability to query data to bring in interactivity. Rumi comes with a Javascript ORM called as PykQuery. Using PykQuery, your Javascript code can query in-browser or query the database directly from the front-end with minimum knowledge.
        %br
        %br
        %h3#configuration-editors Configuration Editors
        %hr
        %p Often clients need various parts of the software to be configurable. This helps you keep your visualizations relevant to changing real-world scenarios. Rumi.io allows business users to dynamically define various configurable elements (e.g. titles, metatags, metadescriptions, etc. of pages) with a simple drag-and-drop UI. Customers can then change configurations from Rumi themselves, publish it and three minutes later the visualization updates.
        %br
        %br
        %h3#host-dashboards Single-sign-on, reliable hosting for custom dashboards
        %hr
        %p Custom dashboards and visualizations are front-end only services projects. They are either hosted a) publicly for every one to consume e.g. for marketing or media b) or internally for business intelligence. Connect your GIT url to Rumi and Rumi hosts it for you. If the dashboard is hosted internally, then the launched is hosted within the session and security of Rumi.
        %br
        %br
        %br

      #myScrollspy.col-xs-2{:style => "margin-top:20px;"}
        .tour-side-bar{"data-offset-top" => "0", "data-spy" => "affix"}
          %ul.nav.nav-tabs.nav-stacked.affix-top
            %li.list-heading
              %h5= link_to "Do-it-yourself tools", "#top"
            %li.active
              %a{:href => "#data-sets"} Data Sets
            %li
              %a{:href => "#clean-data"} Clean Data
            %li
              %a{:href => "#visualize-data"} Visualize Data
            %li
              %a{:href => "#themes"} Themes
            %li
              %a{:href => "#publish-visualizations"} Publish Visualizations
            %li
              %a{:href => "#open-data"} Ecosystem for Open Data

          %ul.nav.nav-tabs.nav-stacked{:style => "margin-top:20px;"}
            %li.list-heading
              %h5= link_to "Developer tools", "#developer-tools"
            %li
              %a{:href => "#data-as-a-service"} Data-as-a-service
            %li
              %a{:href => "#query-data"} Query Data
            %li
              %a{:href => "#configuration-editors"} Configuration Editors
            %li
              %a{:href => "#host-dashboards"} Host Dashboards
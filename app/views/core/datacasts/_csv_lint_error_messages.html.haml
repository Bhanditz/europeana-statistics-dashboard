.panel.panel-danger
  .panel-heading We faced issues with the data set. Please check below and update:
.panel-body
  %table.table.table-condensed
    %thead
      %tr
        %th Row
        %th Genre
        %th Category 1
        %th Category 2
        %th Contents
    %tbody
      - @validator.errors.each do |err|
        - if err.type == :stray_quote
          - err_type = "Stray Quotes"
        -elsif err.type == :unclosed_quote
          - err_type = "Unclosed Quoted Field"
        -elsif err.type == :whitespace
          - err_type = "Quoted column has leading or trailing whitespace"
        -elsif err.type == :invalid_encoding
          - err_type = "Encoding error when parsing row, e.g. because of invalid characters"
        -elsif err.type == :blank_rows
          - err_type = "Empty row"
        -elsif err.type == :ragged_rows
          - err_type = "Row has a different number of columns (than the first row in the file)"
        - elsif err.type == :wrong_content_type
          - err_type = "Content type is not text/csv"
        -elsif err.type == :not_found
          - err.type = "File Not found when retreiving file"
        - elsif err.type == :line_breaks
          - err_type = "Line breaks were inconsistent or incorrectly specified"
        - elsif err.type == :undeclared_header
          - err_type = "Headers not declared"
        - else
          - err_type = err.type
        - if err.category == :structure
          - err_category = "Structural Error: "
        - elsif err.category == :schema
          - err_category = "Schema Validation Error: "
        - elsif err.category == :context
          - err_category = "Context Error: "
        - else
          - err_category = err.category
        %tr
          %td.col-sm-1= err.row
          %td.col-sm-1 Error
          %td.col-sm-1= err_category
          %td.col-sm-1= err_type
          %td.hint= err.content

%br

.panel.panel-danger
  .panel-heading Warnings faced
.panel-body
  %table.table.table-condensed
    %thead
      %tr
        %th Column
        %th Warning
    %tbody

      - @validator.warnings.each do |warn|
        - if warn.category == :structure
          - warn_category = "Structural Error: "
        - elsif warn.category == :schema
          - warn_category = "Schema Validation Error: "
        - elsif warn.category == :context
          - warn_category = "Context Error: "
        - else
          - warn_category = warn.category
        - if warn.type == :encoding
          - warn_type = "Character set is not UTF-8"
        -elsif warn.type == :check_options
          - warn_type = "CSV file appears to contain only a single column"
        -elsif warn.type == :inconsistent_values
          - warn_type = "Inconsistent values in the same column"
        -elsif warn.type == :no_content_type
          - warn_type = "file is being served without a Content-Type header"
        -elsif warn.type == :excel
          - warn_type = "no Content-Type header and the file extension is .xls"
        -elsif warn.type == :ragged_rows
          - warn_type = "Row has a different number of columns (than the first row in the file)"
        - elsif warn.type == :wrong_content_type
          - warn_type = "Content type is not text/csv"
        -elsif warn.type == :no_encoding
          - warn.type = "the Content-Type header returned in the HTTP request does not have a charset parameter"
        - elsif warn.type == :empty_column_name
          - warn_type = "A column in the CSV header has an empty name"
        - elsif warn.type == :duplicate_column_name
          - warn_type = "a column in the CSV header has a duplicate name"
        -elsif warn.type == :title_row
          - warn_type = "Possible title field in the first row of the CSV"
        - else
          - warn_type = warn.type
        %tr
          %td= warn.column
          %td= warn_category + " " + warn_type

- if 1==2
  %hr
  %h1 Information Messages
  - @validator.info_messages.each do |info|
    %div.alert.alert-info
      - if info.category == :structure
        - info_category = "Structural Error: "
      - elsif info.category == :schema
        - info_category = "Schema Validation Error: "
      - elsif info.category == :context
        - info_category = "Context Error: "
      - else
        - info_category = info.category
      - info_msg = "#{info_category}: #{info.content} "
      %p= info_msg

:javascript
  $(document).ready(function () {
    clicked_on_upload_step();
  });